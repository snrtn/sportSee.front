	La gestion des calls asynchrones et des promesses

	useState est utilisé pour initialiser et mettre à jour l'état local du composant.

	useEffect sert à exécuter des effets de bord (dans ce cas, un appel API) après chaque rendu, mais ici nous passons un tableau vide comme second argument pour s'assurer que l'effet s'exécute une seule fois après le premier rendu.

	fetch est une fonction native pour faire des requêtes réseau. Elle retourne une promesse qui, une fois résolue, donne accès à la réponse de la requête.

	L'utilisation des promesses avec async/await rend le code plus lisible et facile à comprendre, en particulier lorsqu'il s'agit de chaînes d'opérations asynchrones. Notez l'importance de la gestion des erreurs avec try/catch pour s'assurer que toute erreur pendant le chargement des données est capturée et gérée appropriément.


import React, { useState, useEffect } from 'react';

function DataFetch() {
  const [data, setData] = useState(null); // Stocker les données
  const [loading, setLoading] = useState(true); // État de chargement
  const [error, setError] = useState(null); // État d'erreur

  useEffect(() => {
    // Fonction asynchrone pour récupérer les données
    const fetchData = async () => {
      try {
        const response = await fetch('https://api.example.com/data');
        if (!response.ok) {
          throw new Error('La réponse réseau n\'est pas correcte.');
        }
        const jsonData = await response.json(); // Convertir les données en JSON
        setData(jsonData); // Mettre à jour l'état des données
      } catch (error) {
        setError(error); // Mettre à jour l'état d'erreur
      } finally {
        setLoading(false); // Mettre à jour l'état de chargement
      }
    };

    fetchData();
  }, []); // Un tableau vide signifie que cet effet ne dépend d'aucun état et s'exécute une seule fois après le montage du composant

  if (loading) return <div>Chargement...</div>;
  if (error) return <div>Erreur : {error.message}</div>;

  return (
    <div>
      <h1>Données chargées</h1>
      {/* Afficher les données ici */}
    </div>
  );
}

export default DataFetch;
